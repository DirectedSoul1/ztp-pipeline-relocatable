apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: spoke-deploy-disconnected-registry-spokes
  annotations:
    description: |
      This task will deploy the Disconnected Internal registry.
      Then will perform the OCP and OLM sync, based on the SYNC parameter.
      Update the Global PullSecret for every spoke with the proper credentials.
spec:
  workspaces:
    - name: ztp
  params:
    - name: ztp-container-image
      type: string
      default: "quay.io/ztpfw/pipeline:latest"
    - name: kubeconfig
      type: string
      default: ""
    - name: spokes-config
      type: string
      default: ""
  stepTemplate:
    env:
      - name: WORKDIR
        value: "/workspace/ztp"
      - name: SPOKES_CONFIG
        value: $(params.spokes-config)
      - name: KUBECONFIG
        value: "$(workspaces.ztp.path)/kubeconfig"
      - name: DEPLOY_REGISTRY_DIR
        value: "deploy-disconnected-registry"
      - name: SHARED_DIR
        value: "shared-utils"

  steps:
    - name: deploy-disconnected-registry
      image: "$(params.ztp-container-image)"
      imagePullPolicy: Always
      script: |
        #!/usr/bin/bash

        cd ${WORKDIR}/${DEPLOY_REGISTRY_DIR}
        ./deploy.sh 'spoke'

    #- name: mirror-ocp
    #  image: "$(params.ztp-container-image)"
    #  imagePullPolicy: Always
    #  securityContext:
    #    privileged: false
    #    runAsUser: 0
    #  volumeMounts:
    #  - mountPath: /var/lib/containers
    #    name: lib-containers
    #  script: |
    #    #!/usr/bin/bash
    #
    #    cd ${WORKDIR}/${DEPLOY_REGISTRY_DIR}
    #    echo "Starting OpenShift Image Mirroring"
    #    ./ocp-sync.sh 'spoke'
    #
    #- name: mirror-olm
    #  image: "$(params.ztp-container-image)"
    #  imagePullPolicy: Always
    #  securityContext:
    #    privileged: false
    #    runAsUser: 0
    #  volumeMounts:
    #  - mountPath: /var/lib/containers
    #    name: lib-containers
    #  script: |
    #    #!/usr/bin/bash
    #
    #    cd ${WORKDIR}/${DEPLOY_REGISTRY_DIR}
    #    echo "Starting OLM Catalog Image Mirroring Step"
    #    ./olm-sync.sh 'spoke'

    - name: oc-mirror
      image: "$(params.ztp-container-image)"
      imagePullPolicy: Always
      securityContext:
        privileged: false
        runAsUser: 0
      volumeMounts:
      - mountPath: /var/lib/containers
        name: lib-containers
      script: |
        #!/usr/bin/bash
      
        cd ${WORKDIR}/${DEPLOY_REGISTRY_DIR}
        echo "Starting oc-mirror for the Mirroring Step"
        ./oc-mirror.sh 'spoke'

    - name: update-global-pullsecret
      image: "$(params.ztp-container-image)"
      imagePullPolicy: Always
      script: |
        #!/usr/bin/bash

        cd ${WORKDIR}/${DEPLOY_REGISTRY_DIR}
        ./update-global-pullsecret.sh 'spoke'

  volumes:
  - name: lib-containers
    emptyDir: {}
